{"version":3,"sources":["assets/logo.png","components/Nav/Nav.js","assets/flash.png","components/Landing/Landing.js","components/Footer/Footer.js","components/TryAgain/TryAgain.js","components/ChallengeDetilsCard/ChallengeDetailsCard.js","components/TestLetter/TestLetter.js","components/TypingChallenge/TypingChallenge.js","components/TypingChallengeContainer/TypingChallengeContainer.js","components/TextContainer/TextContainer.js","components/ChallengeSection/ChallengeSection.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Nav","className","src","logo","alt","target","href","rel","Landing","data-aos","options","strings","autoStart","loop","flash","Footer","TryAgain","words","characters","wpm","startAgain","onClick","window","open","ChallengeDetailsCard","cardName","cardValue","TestLetter","letterInfo","statusClass","correct","incorrect","notAttempted","status","testLetter","TypingChallenge","selectedParagraph","timeRemaining","timeStarted","testInfo","onInputChange","map","index","onChange","e","value","placeholder","TypingChallengeContainer","TextContainer","ChallengeSection","serviceUrl","defaultState","App","state","fetchNewParagraph","fetch","then","response","text","data","split","letter","setState","handleUserInput","inputValue","startTimer","length","slice","isCorrect","timer","setInterval","timeSpent","parseInt","clearInterval","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e29999d0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.904ac8fd.png\";","import React from \"react\"\r\nimport \"./Nav.css\"\r\nimport logo from \"./../../assets/logo.png\"\r\n\r\nconst Nav= () => {\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"nav-left\">\r\n                <img className=\"flash-logo\" src={logo} alt=\"logo\" />\r\n                <p className=\"flash-logo-text\">FLASHTYPE!</p>\r\n            </div>\r\n            <div className=\"nav-right\">\r\n                <a target=\"_blank\" className=\"nav-link\" href=\"https://github.com/jithendrac\" rel=\"noreferrer\">Github</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;","export default __webpack_public_path__ + \"static/media/flash.96e141d3.png\";","import React from \"react\"\r\nimport \"./Landing.css\"\r\nimport flash from \"./../../assets/flash.png\"\r\nimport Typewriter from\"typewriter-effect\"\r\n\r\nconst Landing= () => {\r\n    return (\r\n        <div className=\"landing-container\">\r\n            <div data-aos=\"fade-right\" className=\"landing-left\">\r\n                <h1 className=\"landing-header\">Can you type...</h1>\r\n                <div className=\"typewriter-container\">\r\n                <Typewriter\r\n                    options={{\r\n                    strings: ['Fast?', 'Correct?', 'Quick?'],\r\n                    autoStart: true,\r\n                    loop: true,\r\n                    }}\r\n                />\r\n                </div>\r\n            </div>\r\n            <div className=\"landing-right\">\r\n                <img data-aos=\"fade-left\" className=\"flash-image\" src={flash} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landing;","import React from \"react\"\r\nimport \"./Footer.css\"\r\nimport logo from \"./../../assets/logo.png\"\r\n\r\nconst Footer= () => {\r\n    return (\r\n        <div className=\"footer-container\">\r\n            <a className=\"footer-link\" target=\"_blank\" rel=\"noreferrer\" href=\"\">\r\n                My Social Media Platforms!\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\"\r\nimport \"./TryAgain.css\"\r\n\r\nconst TryAgain= ({words, characters, wpm, startAgain}) => {\r\n    return (\r\n        <div className=\"try-again-container\">\r\n            <h1>Test Results</h1>\r\n            <div className=\"result-container\">\r\n                <p>\r\n                    <b>Charachters:</b>{characters}\r\n                </p>\r\n                <p>\r\n                    <b>Words:</b>{words}\r\n                </p>\r\n                <p>\r\n                    <b>Speed:</b>{wpm}\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <button\r\n                    onClick={() => startAgain()}\r\n                    className=\"end-buttons start-again-btn\"\r\n                >\r\n                    Re-Try\r\n                </button>\r\n                <button\r\n                    onClick={() =>\r\n                        window.open(\r\n                            \"https://www.facebook.com\",\r\n                            \"facebook-share-dialog\",\r\n                            \"width=800,height=600\"\r\n                        )\r\n                    }\r\n                    className=\"end-buttons share-btn\"\r\n                >\r\n                    Share\r\n                </button>\r\n                <button\r\n                    onClick={() =>\r\n                        window.open(\r\n                            \"https://twitter.com/intent/tweet\", \r\n                            \"Twitter\",\r\n                            \"width=800,height=600\"\r\n                        )\r\n                    }\r\n                    className=\"end-buttons tweet-btn\"\r\n                >\r\n                    Tweet\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TryAgain;","import React from \"react\"\r\nimport \"./ChallengeDetailsCard.css\"\r\n\r\nconst ChallengeDetailsCard= ({cardName, cardValue}) => {\r\n    return (\r\n        <div className=\"details-card-container\">\r\n            <div className=\"card-name\">{cardName}</div>\r\n            <div className=\"card-value\">{cardValue}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChallengeDetailsCard;","import React from \"react\";\r\nimport \"./TestLetter.css\";\r\n\r\nconst TestLetter = ({letterInfo}) => {\r\n    const {status}=letterInfo;\r\n\r\n    const statusClass={\r\n        correct: \"test-letter-correct\",\r\n        incorrect: \"test-letter-incorrect\",\r\n        notAttempted: \"test-letter-not-attempted\"\r\n    }[status];\r\n\r\n    return (\r\n        <span className={`test-letter ${statusClass}`}>\r\n            {letterInfo.testLetter}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default TestLetter;","import React from \"react\";\r\nimport TestLetter from \"../TestLetter/TestLetter\";\r\nimport \"./TypingChallenge.css\";\r\n\r\nconst TypingChallenge = ({selectedParagraph, timeRemaining, timeStarted, testInfo, onInputChange}) => {\r\n\r\n    return (\r\n        <div className=\"typing-challenge\">\r\n            <div className=\"timer-container\">\r\n                <p className=\"timer\">\r\n                    00:{timeRemaining > 10 ? timeRemaining : \"0\"+timeRemaining}\r\n                </p>\r\n                <p className=\"timer-info\">\r\n                    {!timeStarted && \"Start typing to start the test\"}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"textarea-container\">\r\n                <div className=\"textarea-left \">\r\n                    <div className=\"textarea test-paragraph\">\r\n                        {testInfo.map((letterInfo, index) => (\r\n                            <TestLetter key={index} letterInfo={letterInfo} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"textarea-right\">\r\n                    <textarea\r\n                        onChange={(e) => onInputChange(e.target.value)}\r\n                        className=\"textarea\"\r\n                        placeholder=\"Start typing here\"\r\n                    ></textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypingChallenge;","import React from \"react\"\r\nimport ChallengeDetailsCard from \"../ChallengeDetilsCard/ChallengeDetailsCard\"\r\nimport TypingChallenge from \"../TypingChallenge/TypingChallenge\"\r\nimport \"./TypingChallengeContainer.css\"\r\n\r\nconst TypingChallengeContainer= ({selectedParagraph, words, characters, wpm, timeRemaining, timeStarted, testInfo, onInputChange}) => {\r\n    return (\r\n        <div className=\"typing-challenge-container\">\r\n            <div className=\"details-container\">\r\n                <ChallengeDetailsCard cardName=\"words\" cardValue={words}/>\r\n                <ChallengeDetailsCard cardName=\"Characters\" cardValue={characters}/>\r\n                <ChallengeDetailsCard cardName=\"Speed\" cardValue={wpm}/>\r\n            </div>\r\n            <div className=\"typewriter-container\">\r\n                <TypingChallenge selectedParagraph={selectedParagraph} timeRemaining={timeRemaining} timeStarted={timeStarted} testInfo={testInfo} onInputChange={onInputChange}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TypingChallengeContainer;","import React from \"react\"\r\nimport TryAgain from \"../TryAgain/TryAgain\"\r\nimport TypingChallengeContainer from \"../TypingChallengeContainer/TypingChallengeContainer\"\r\nimport \"./TextContainer.css\"\r\n\r\nconst TextContainer= ({selectedParagraph, words, characters, wpm, timeRemaining, timeStarted, testInfo, onInputChange, startAgain}) => {\r\n    \r\n    return (\r\n        <div className=\"text-container\">\r\n            {\r\n                timeRemaining > 0 ? (\r\n                    <div data-aos=\"fade-up\" className=\"typing-challengee-container\">\r\n                        <TypingChallengeContainer words={words} characters={characters} wpm={wpm} selectedParagraph={selectedParagraph} timeRemaining={timeRemaining} timeStarted={timeStarted} testInfo={testInfo} onInputChange={onInputChange} />\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"try-container\">\r\n                        <TryAgain words={words} characters={characters} wpm={wpm} startAgain={startAgain}/>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextContainer;","import React from \"react\"\r\nimport TextContainer from \"../TextContainer/TextContainer\"\r\nimport \"./ChallengeSection.css\"\r\n\r\nconst ChallengeSection= ({selectedParagraph, words, characters, wpm, timeRemaining, timeStarted, testInfo, onInputChange, startAgain}) => {\r\n    return (\r\n        <div className=\"challenge-section-container\">\r\n            <div className=\"challenge-section-header\">\r\n                    Take a speed test now!\r\n            </div>\r\n            <TextContainer words={words} characters={characters} wpm={wpm} selectedParagraph={selectedParagraph} timeRemaining={timeRemaining} timeStarted={timeStarted} testInfo={testInfo} onInputChange={onInputChange} startAgain={startAgain}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChallengeSection;","import React from \"react\"\nimport './App.css';\nimport Nav from \"../Nav/Nav\"\nimport Landing from \"../Landing/Landing\";\nimport Footer from \"../Footer/Footer\";\nimport ChallengeSection from \"../ChallengeSection/ChallengeSection\";\n\nconst totalTime=20;\nconst serviceUrl=\"https://baconipsum.com/api/?type=all-meat&paras=3&start-with-lorem=1&format=text\"\nconst defaultState={\n  selectedParagraph:\"\",\n  timeStarted:false,\n  timeRemaining:totalTime,\n  words:0,\n  characters:0,\n  wpm:0,\n  testInfo:[]\n}\n\nclass App extends React.Component{\n  state=defaultState;\n\n  componentDidMount() {\n      this.fetchNewParagraph();\n    }\n\n  fetchNewParagraph = () => {\n    fetch(serviceUrl).then(response => response.text()).then(data => {\n      const testInfo=data.split(\"\").map(letter=> {\n        return{\n            testLetter:letter,\n            status: \"notAttempted\"\n        };\n      });\n      this.setState({...defaultState, selectedParagraph:data, testInfo})\n    }\n  );\n}\n\nstartAgain = () => {\n    this.fetchNewParagraph();\n  }\n\n    handleUserInput = (inputValue) => {\n        if(!this.state.timeStarted) this.startTimer();\n\n        const characters = inputValue.length;\n        const words = inputValue.split(\" \").length;\n        const index = characters - 1;\n\n        //when you enter backsapce: underflow case\n        if(index < 0){\n            this.setState({\n              testInfo: [\n                { \n                  testLetter: this.state.testInfo[0].testLetter,\n                  status: \"notAttempted\"\n                },\n                ...this.state.testInfo.slice(1)\n              ],\n              characters,\n              words\n            })\n            return;\n        }\n\n        //when you enter more no. of words:overflow condition\n        if(index > this.state.selectedParagraph.length){\n            this.setState({characters,words})\n            return;\n        }\n\n        //handling backspace\n        const testInfo=this.state.testInfo;\n        if(!(index === this.state.selectedParagraph.length))\n            testInfo[index+1].status = \"notAttempted\";\n\n        //check for correct typed letter\n        const isCorrect = inputValue[index] === testInfo[index].testLetter;\n        //update status\n        testInfo[index].status = isCorrect ? \"correct\" : \"incorrect\";\n        this.setState({ testInfo, words, characters})\n\n    }\n\n    startTimer = () => {\n      this.setState({timeStarted:true})\n      const timer = setInterval(() => {\n        if(this.state.timeRemaining > 0){\n          const timeSpent=totalTime-this.state.timeRemaining;\n          const wpm=timeSpent > 0 ? (this.state.words / timeSpent)*totalTime : 0;\n          this.setState({timeRemaining: this.state.timeRemaining - 1, wpm:parseInt(wpm)})\n        }\n        else{\n            clearInterval(timer)\n        }\n      },1000)\n    }\n\n  render() {\n    \n    return (\n      <div className=\"app\">\n        <Nav />\n        <Landing />\n        <ChallengeSection \n            selectedParagraph={this.state.selectedParagraph}\n            words={this.state.words}\n            characters={this.state.characters}\n            wpm={this.state.wpm}\n            timeRemaining={this.state.timeRemaining}\n            timeStarted={this.state.timeStarted}\n            testInfo={this.state.testInfo}\n            onInputChange={this.handleUserInput}\n            startAgain={this.startAgain}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '././components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}